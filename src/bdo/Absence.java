/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bdo;

import bdo.connection.OracleCon;
import bdo.entities.Etudiant;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ORACLE
 */
public class Absence extends javax.swing.JFrame {

    
     int i=0;
    /**
     * Creates new form Absence
     */
    public Absence() throws SQLException {
        
        initComponents();
        absent.setVisible(false);
        cneabsent.setVisible(false);
        nomabs.setVisible(false);
        prenomabs.setVisible(false);
        this.filieres();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        modules = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableetudiants = new javax.swing.JTable();
        filieres = new javax.swing.JComboBox<>();
        sceances = new javax.swing.JComboBox<>();
        getEtudiants = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        elements = new javax.swing.JComboBox<>();
        prenomabs = new javax.swing.JLabel();
        cneabsent = new javax.swing.JLabel();
        nomabs = new javax.swing.JLabel();
        absent = new javax.swing.JButton();
        Annuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel1.setText("Gérer L'absence");

        jTextField1.setText("Filiere");

        jTextField2.setText("Module");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setText("Séance");

        modules.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        modules.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                modulesItemStateChanged(evt);
            }
        });

        tableetudiants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cne", "nom", "prenom", "nombre absence"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableetudiants.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableetudiantsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableetudiants);
        if (tableetudiants.getColumnModel().getColumnCount() > 0) {
            tableetudiants.getColumnModel().getColumn(0).setResizable(false);
            tableetudiants.getColumnModel().getColumn(1).setResizable(false);
            tableetudiants.getColumnModel().getColumn(2).setResizable(false);
            tableetudiants.getColumnModel().getColumn(3).setResizable(false);
        }

        filieres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        filieres.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filieresItemStateChanged(evt);
            }
        });
        filieres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filieresActionPerformed(evt);
            }
        });

        sceances.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        getEtudiants.setBackground(java.awt.Color.green);
        getEtudiants.setText("Etudiants");
        getEtudiants.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getEtudiantsMouseClicked(evt);
            }
        });

        reset.setBackground(java.awt.Color.red);
        reset.setText("Reset");

        jTextField4.setText("element");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        elements.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        elements.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                elementsItemStateChanged(evt);
            }
        });

        prenomabs.setFont(new java.awt.Font("Miriam Fixed", 1, 12)); // NOI18N

        cneabsent.setFont(new java.awt.Font("Miriam Fixed", 1, 12)); // NOI18N

        nomabs.setFont(new java.awt.Font("Miriam Fixed", 1, 12)); // NOI18N

        absent.setBackground(java.awt.Color.green);
        absent.setText("Absent");
        absent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                absentMouseClicked(evt);
            }
        });

        Annuler.setBackground(java.awt.Color.red);
        Annuler.setText("Annuler");
        Annuler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnnulerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField1)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(getEtudiants, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(filieres, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modules, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sceances, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elements, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Annuler, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nomabs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cneabsent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(prenomabs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(absent, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)))
                .addGap(117, 117, 117)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(182, 182, 182))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(filieres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modules, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cneabsent, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nomabs, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(elements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(prenomabs, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sceances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(getEtudiants)
                            .addComponent(reset)
                            .addComponent(absent))
                        .addGap(18, 18, 18)
                        .addComponent(Annuler, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void tableetudiantsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableetudiantsMouseClicked
        this.i=this.tableetudiants.getSelectedRow();
 
        TableModel model=this.tableetudiants.getModel();
        cneabsent.setText(model.getValueAt(i, 0).toString());
        nomabs.setText(model.getValueAt(i, 1).toString());
        prenomabs.setText(model.getValueAt(i, 2).toString());
        absent.setVisible(true);
        cneabsent.setVisible(true);
        nomabs.setVisible(true);
        prenomabs.setVisible(true);
        
        /* this.nom.setText(model.getValueAt(i,1).toString());
        this.prenom.setText(model.getValueAt(i,2).toString());
        this.cne.setText(model.getValueAt(i,0).toString());
        this.email.setText(model.getValueAt(i,3).toString());
        this.filiere.setText(model.getValueAt(i,5).toString());
        this.niveau.setValue(model.getValueAt(i,4));
        */

    }//GEN-LAST:event_tableetudiantsMouseClicked

    private void filieresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filieresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filieresActionPerformed

    private void getEtudiantsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getEtudiantsMouseClicked
         try {
             // TODO add your handling code here:
             this.etudiants(this.filieres.getSelectedItem().toString());
         } catch (SQLException ex) {
             Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
         }

    }//GEN-LAST:event_getEtudiantsMouseClicked

    private void filieresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filieresItemStateChanged

        try {
            this.modules(evt.getItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_filieresItemStateChanged

    private void modulesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_modulesItemStateChanged
   try {
            this.elements(evt.getItem().toString());
        
   } catch (SQLException ex) {
            Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_modulesItemStateChanged

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    
    private void elementsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_elementsItemStateChanged
   try {
        System.out.println("ssjhow");
       try {
           this.sceances(evt.getItem().toString());
       } catch (ParseException ex) {
           Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
       }
        } catch (SQLException ex) {
            Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_elementsItemStateChanged

    private void absentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_absentMouseClicked

        String cne=this.cneabsent.getText().toString();
        String sceance=this.sceances.getSelectedItem().toString();
        
        String plsql ="insert into absences values(1,(select ref(e) from etudiants e where e.CNE= ?),(select ref(s) from sceances s where s.datesceance= ? and deref(s.refelement).nom=?))";
        System.err.println(plsql);
  
        CallableStatement cs;   
         try {
             cs = OracleCon.getInstance().getConnexion().prepareCall(plsql);
             cs.setString(1,cne);
            String format1="yyyy-mm-dd",format2="dd/mm/yy";   
            String newdate;
            SimpleDateFormat sdf=new SimpleDateFormat(format1);
            Date d=sdf.parse(sceance);
            sdf.applyPattern(format2);
            newdate=sdf.format(d);
            cs.setString(2,newdate);
           cs.setString(3,this.elements.getSelectedItem().toString());

             cs.execute();
             absent.setVisible(false);
             cneabsent.setVisible(false);
             nomabs.setVisible(false);
             prenomabs.setVisible(false);
             DefaultTableModel model=(DefaultTableModel) this.tableetudiants.getModel();
             model.removeRow(this.i);
             this.etudiants(this.filieres.getSelectedItem().toString());
              
         } catch (SQLException ex) {
             Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
         } catch (ParseException ex) {
             Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        
            
            
    }//GEN-LAST:event_absentMouseClicked

    private void AnnulerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnulerMouseClicked

        String cne=this.cneabsent.getText().toString();
        String sceance=this.sceances.getSelectedItem().toString();
      //  String plsql ="insert into absences values(1,(select ref(e) from etudiants e where e.CNE= ?),(select ref(s) from sceances s where s.datesceance= ? and deref(s.refelement).nom=?))";
       String plsql="delete from absences where deref(refetudiant).cne=? and deref(refsceance).datesceance=? and deref(deref(refsceance).refelement).nom=? and deref(deref(deref(refsceance).refelement).refmodule).nom=? ";
        CallableStatement cs;   
         try {
             cs = OracleCon.getInstance().getConnexion().prepareCall(plsql);
             cs.setString(1,cne);
            String format1="yyyy-mm-dd",format2="dd/mm/yy";   
            String newdate;
            SimpleDateFormat sdf=new SimpleDateFormat(format1);
            Date d=sdf.parse(sceance);
            sdf.applyPattern(format2);
            newdate=sdf.format(d);
            cs.setString(2,newdate);
             cs.setString(3,this.elements.getSelectedItem().toString());
             cs.setString(4,this.modules.getSelectedItem().toString());
             cs.execute();
             absent.setVisible(false);
             cneabsent.setVisible(false);
             nomabs.setVisible(false);
             prenomabs.setVisible(false);
             DefaultTableModel model=(DefaultTableModel) this.tableetudiants.getModel();
             model.removeRow(this.i);
             this.etudiants(this.filieres.getSelectedItem().toString());
              
         } catch (SQLException ex) {
             Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
         } catch (ParseException ex) {
             Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
         }
        

        // TODO add your handling code here:
    }//GEN-LAST:event_AnnulerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Absence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Absence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Absence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Absence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Absence().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Absence.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
      public void filieres() throws SQLException{
       
        String plsql ="select * from filieres";
        CallableStatement cs= OracleCon.getInstance().getConnexion().prepareCall(plsql);   
        cs.execute();
        ResultSet rs=(ResultSet) cs.getResultSet();
        while(rs.next()){
        this.filieres.addItem(rs.getString("nom"));
        }
         }
     public void modules(String f) throws SQLException{
       String plsql ="select * from modules where deref(ref_filiere).nom=?";
        CallableStatement cs= OracleCon.getInstance().getConnexion().prepareCall(plsql);   
        cs.setString(1, f);
        cs.execute();
        ResultSet rs=(ResultSet) cs.getResultSet();
        while(rs.next()){
        this.modules.addItem(rs.getString("nom"));
        }
     }
     public void elements(String m) throws SQLException{
       String plsql ="select * from elements where deref(refmodule).nom=?";
        CallableStatement cs= OracleCon.getInstance().getConnexion().prepareCall(plsql);   
        cs.setString(1, m);
        cs.execute();
        ResultSet rs=(ResultSet) cs.getResultSet();
        while(rs.next()){  
        this.elements.addItem(rs.getString("nom"));
        }
     }
     
     
     public void etudiants(String f) throws SQLException{
         String plsql ="select cne,firstname as nom, lastname as prenom,(select count(*) from absences a where deref(a.refetudiant).cne = cne) as nombre_absence  from etudiants where deref(ref_filiere).nom= ? ";
        CallableStatement cs= OracleCon.getInstance().getConnexion().prepareCall(plsql);   
        cs.setString(1, f);
        cs.execute();
        ResultSet rs=(ResultSet) cs.getResultSet();
       
        DefaultTableModel model=(DefaultTableModel) this.tableetudiants.getModel();
        model.setRowCount(0);
       /* row[1]=etudiants.get(i).getNom();
        row[2]=etudiants.get(i).getPrenom();
        row[0]=etudiants.get(i).getCne();
        row[3]=etudiants.get(i).getEmail();
        row[5]=etudiants.get(i).getFiliere();
        row[4]=etudiants.get(i).getNiveau();
*/      while(rs.next()){
        Object[] row=new Object[4];
        row[0]=rs.getString("cne");
        row[1]=rs.getString("prenom");
        row[2]=rs.getString("nom");
        row[3]=rs.getString("nombre_absence");
        model.addRow(row);        
}
     }
     
     
     
        public void sceances(String element) throws SQLException, ParseException{
        String plsql ="select * from sceances  where datesceance >= TO_DATE(SYSDATE,'dd/mm/yy') and  deref(refelement).nom=?";
        CallableStatement cs= OracleCon.getInstance().getConnexion().prepareCall(plsql);   
        cs.setString(1,element);
        cs.execute();
        ResultSet rs=(ResultSet) cs.getResultSet();
        while(rs.next()){
                    System.out.println(rs.getString("datesceance"));
                     
            this.sceances.addItem(rs.getString("datesceance"));
        }
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Annuler;
    private javax.swing.JButton absent;
    private javax.swing.JLabel cneabsent;
    private javax.swing.JComboBox<String> elements;
    private javax.swing.JComboBox<String> filieres;
    private javax.swing.JButton getEtudiants;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JComboBox<String> modules;
    private javax.swing.JLabel nomabs;
    private javax.swing.JLabel prenomabs;
    private javax.swing.JButton reset;
    private javax.swing.JComboBox<String> sceances;
    private javax.swing.JTable tableetudiants;
    // End of variables declaration//GEN-END:variables
}
